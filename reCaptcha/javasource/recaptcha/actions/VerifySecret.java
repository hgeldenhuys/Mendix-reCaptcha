// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package recaptcha.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import javax.net.ssl.HttpsURLConnection;
import java.io.*;
import java.net.*;
import org.json.JSONObject;

/**
 * Returns true if Goolge verifies that this is a human and not an el-robotto
 */
public class VerifySecret extends CustomJavaAction<Boolean>
{
	private String Secret;
	private String Response;

	public VerifySecret(IContext context, String Secret, String Response)
	{
		super(context);
		this.Secret = Secret;
		this.Response = Response;
	}

	@Override
	public Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		JSONObject json = getHTML("https://www.google.com/recaptcha/api/siteverify?secret="+Secret+"&response="+Response);

		if (json.has("error-codes"))
			Core.getLogger(toString()).error("reCaptcha validation failed: " + json.get("error-codes"));

		return json.getBoolean("success");
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public String toString()
	{
		return "VerifySecret";
	}

	// BEGIN EXTRA CODE
	public static JSONObject getHTML(String urlToRead) throws Exception {
		StringBuilder result = new StringBuilder();
		URL url = new URL(urlToRead);
		HttpsURLConnection conn = (HttpsURLConnection)url.openConnection();
		conn.setRequestMethod("GET");
		BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
		String line;
		while ((line = rd.readLine()) != null) {
			result.append(line);
		}
		rd.close();

		return new JSONObject(result.toString());
	}
	// END EXTRA CODE
}
